{
  "address": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "factories",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "wMatics",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "wMatic",
          "type": "address"
        }
      ],
      "name": "changeWMATIC",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wMatic",
          "type": "address"
        }
      ],
      "name": "setWMATIC",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wMatic",
          "type": "address"
        }
      ],
      "name": "unsetWMATIC",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "factories",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "wMatics",
          "type": "address[]"
        }
      ],
      "name": "changeWMatic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "checkWMatic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "factoryToWMatic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "getAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_output",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "getWMatic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMatic",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "swapExactIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_output",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
  "receipt": {
    "to": null,
    "from": "0x64478Fc1bc6726caf1D0366dC61eF44E7bD3C1bc",
    "contractAddress": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
    "transactionIndex": 2,
    "gasUsed": "1072200",
    "logsBloom": "0x
    "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945",
    "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27570417,
        "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
        "address": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27570417,
        "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
        "address": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
        "topics": [
          "0x12330f5d993a026a582eaf3d6aa6cf59ba0ec304eece453a338ed3292ab0d42f"
        ],
        "data": "0x0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
        "logIndex": 10,
        "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27570417,
        "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
        "address": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
        "topics": [
          "0xd8d262969076702e5547563df196d404bfce804cda75b127297b4fd27bb1bf45"
        ],
        "data": "0x0000000000000000000000005757371414417b8c6caad45baef941abc7d3ab320000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
        "logIndex": 11,
        "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27570417,
        "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
        "address": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
        "topics": [
          "0x12330f5d993a026a582eaf3d6aa6cf59ba0ec304eece453a338ed3292ab0d42f"
        ],
        "data": "0x0000000000000000000000005b67676a984807a212b1c59ebfc9b3568a474f0a",
        "logIndex": 12,
        "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27570417,
        "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
        "address": "0xD29D223F41d97496baed0df42583Ab2a183664cc",
        "topics": [
          "0xd8d262969076702e5547563df196d404bfce804cda75b127297b4fd27bb1bf45"
        ],
        "data": "0x000000000000000000000000c35dadb65012ec5796536bd9864ed8773abc74c40000000000000000000000005b67676a984807a212b1c59ebfc9b3568a474f0a",
        "logIndex": 13,
        "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27570417,
        "transactionHash": "0x06fe34b7d62b83ecbca56bd505d67e4ad7cc4c1430b828ca220b3f56d6015faa",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000aa9741bc64ca900000000000000000000000000000000000000000000000001532becca67d92640000000000000000000000000000000000000000000007cba4bf7c2cda240e180000000000000000000000000000000000000000000000001488278aea18c7d40000000000000000000000000000000000000000000007cba56a136e9688d8a8",
        "logIndex": 14,
        "blockHash": "0x5607e6ba3d36dad947d4bcb928d05893e65605e86f5196e3bf9f2542477ef945"
      }
    ],
    "blockNumber": 27570417,
    "cumulativeGasUsed": "1444953",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32",
      "0xc35DADB65012eC5796536bD9864eD8773aBc74C4"
    ],
    [
      "0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",
      "0x5b67676a984807a212b1c59ebfc9b3568a474f0a"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "36479a67904949b8fba17c4401077ab8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"factories\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"wMatics\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wMatic\",\"type\":\"address\"}],\"name\":\"changeWMATIC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wMatic\",\"type\":\"address\"}],\"name\":\"setWMATIC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wMatic\",\"type\":\"address\"}],\"name\":\"unsetWMATIC\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"factories\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"wMatics\",\"type\":\"address[]\"}],\"name\":\"changeWMatic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"checkWMatic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"factoryToWMatic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_output\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"getWMatic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMatic\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_output\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartRoute/adapter/UniAdapter.sol\":\"UniAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/SmartRoute/adapter/UniAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.15;\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport {IRouterAdapter} from \\\"../intf/IRouterAdapter.sol\\\";\\nimport {IUni} from \\\"../intf/IUni.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {SafeMath} from \\\"../../lib/SafeMath.sol\\\";\\n\\ncontract UniAdapter is IRouterAdapter {\\n    using SafeMath for uint256;\\n\\n    constructor(address[] memory factories, address[] memory wMatics) {\\n        _changeWMatic(factories, wMatics);\\n    }\\n\\n    function factory(address pool) public override returns (address) {\\n        return IUni(pool).factory();\\n    }\\n\\n    function getAmountOut(\\n        address fromToken,\\n        uint256 amountIn,\\n        address toToken,\\n        address pool\\n    ) public view override returns (uint256 _output) {\\n        require(amountIn > 0, \\\"UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT\\\");\\n\\n        (uint256 reserve0, uint256 reserve1, ) = IUni(pool).getReserves();\\n        require(reserve0 > 0 && reserve1 > 0, \\\"UniswapV2Library: INSUFFICIENT_LIQUIDITY\\\");\\n\\n        uint256 reserveInput;\\n        uint256 reserveOutput;\\n        address token0 = IUni(pool).token0();\\n        if (fromToken == token0) {\\n            (reserveInput, reserveOutput) = (reserve0, reserve1);\\n        } else if (toToken == token0) {\\n            (reserveInput, reserveOutput) = (reserve1, reserve0);\\n        } else {\\n            revert(\\\"Not valid from-to token pair\\\");\\n        }\\n\\n        uint256 amountInWithFee = amountIn.mul(997);\\n        uint256 numerator = amountInWithFee.mul(reserveOutput);\\n        uint256 denominator = reserveInput.mul(1000).add(amountInWithFee);\\n        _output = numerator / denominator;\\n    }\\n\\n    function swapExactIn(\\n        address fromToken,\\n        uint256 amountIn,\\n        address toToken,\\n        address pool,\\n        address to\\n    ) external override returns (uint256 _output) {\\n        _output = getAmountOut(fromToken, amountIn, toToken, pool);\\n        (uint256 amount0Out, uint256 amount1Out) = fromToken == IUni(pool).token0()\\n            ? (uint256(0), _output)\\n            : (_output, uint256(0));\\n        IUni(pool).swap(amount0Out, amount1Out, to, new bytes(0));\\n    }\\n}\\n\",\"keccak256\":\"0x0356685d03c95c9aa86f29b8b3d8289e10281e87ec9b1b886d2de8aac39c3956\",\"license\":\"UNLICENSED\"},\"contracts/SmartRoute/intf/IRouterAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\nimport {ReentrancyGuard} from \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface Routing {\\n    function getAmountOut(\\n        address fromToken,\\n        uint256 amountIn,\\n        address toToken,\\n        address pool\\n    ) external view returns (uint256 _output);\\n\\n    function swapExactIn(\\n        address fromToken,\\n        uint256 amountIn,\\n        address toToken,\\n        address pool,\\n        address to\\n    ) external returns (uint256 _output);\\n\\n    function factory(address pool) external returns (address);\\n}\\n\\nabstract contract IRouterAdapter is ReentrancyGuard, Routing, Ownable {\\n    event setWMATIC(address wMatic);\\n    event unsetWMATIC(address wMatic);\\n    event changeWMATIC(address factory, address wMatic);\\n    mapping(address => uint8) public isMatic;\\n    mapping(address => address) public factoryToWMatic;\\n\\n    function checkWMatic(address token) public view returns (bool) {\\n        return isMatic[token] == 1;\\n    }\\n\\n    function getWMatic(address factory) public view returns (address) {\\n        return factoryToWMatic[factory];\\n    }\\n\\n    function changeWMatic(address[] memory factories, address[] memory wMatics) public onlyOwner {\\n        _changeWMatic(factories, wMatics);\\n    }\\n\\n    function _setWMatic(address wMatic) internal {\\n        if (isMatic[wMatic] == 0) {\\n            isMatic[wMatic] = 1;\\n            emit setWMATIC(wMatic);\\n        }\\n    }\\n\\n    function _unsetWMatic(address wMatic) internal {\\n        if (isMatic[wMatic] == 1) {\\n            isMatic[wMatic] = 0;\\n            emit unsetWMATIC(wMatic);\\n        }\\n    }\\n\\n    function _changeWMatic(address[] memory factories, address[] memory wMatics) internal {\\n        for (uint256 i; i < wMatics.length; i++) {\\n            if (wMatics[i] == address(0)) {\\n                _unsetWMatic(wMatics[i]);\\n            } else {\\n                _setWMatic(wMatics[i]);\\n            }\\n            factoryToWMatic[factories[i]] = wMatics[i];\\n            emit changeWMATIC(factories[i], wMatics[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdfe862806c5b25bbb5fbf4eabde12d8db402bc2c788c1e0c2ae2eb5dea26b4ee\",\"license\":\"UNLICENSED\"},\"contracts/SmartRoute/intf/IUni.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IUni {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function factory() external returns (address);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n}\\n\",\"keccak256\":\"0x672bdac5b1e16d7d7952007012a6f8531678e5ae28c8785d7d51cf59f3c4d972\",\"license\":\"UNLICENSED\"},\"contracts/lib/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.15;\\n\\n/**\\n * @title SafeMath\\n * @author DODO Breeder\\n *\\n * @notice Math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"MUL_ERROR\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"DIVIDING_ERROR\\\");\\n        return a / b;\\n    }\\n\\n    function divCeil(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 quotient = div(a, b);\\n        uint256 remainder = a - quotient * b;\\n        if (remainder > 0) {\\n            return quotient + 1;\\n        } else {\\n            return quotient;\\n        }\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SUB_ERROR\\\");\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"ADD_ERROR\\\");\\n        return c;\\n    }\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 y) {\\n        uint256 z = x / 2 + 1;\\n        y = x;\\n        while (z < y) {\\n            y = z;\\n            z = (x / z + z) / 2;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x294966673bde0ed88353f6fe022d55cc4ec42f08b0e48d1c3d19214e55924ff8\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200148138038062001481833981016040819052620000349162000446565b6001600055620000443362000058565b620000508282620000aa565b5050620004ee565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b81518110156200026c5760006001600160a01b0316828281518110620000d757620000d7620004b0565b60200260200101516001600160a01b03160362000121576200011b828281518110620001075762000107620004b0565b60200260200101516200027160201b60201c565b6200014e565b6200014e8282815181106200013a576200013a620004b0565b6020026020010151620002ee60201b60201c565b818181518110620001635762000163620004b0565b602002602001015160036000858481518110620001845762000184620004b0565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055507fd8d262969076702e5547563df196d404bfce804cda75b127297b4fd27bb1bf45838281518110620002065762000206620004b0565b6020026020010151838381518110620002235762000223620004b0565b60200260200101516040516200024f9291906001600160a01b0392831681529116602082015260400190565b60405180910390a1806200026381620004c6565b915050620000ad565b505050565b6001600160a01b03811660009081526002602052604090205460ff16600103620002eb576001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527f84333c02f52801cb6b335fef47a4230820c52891631eb98fd13af7700968ef7091015b60405180910390a15b50565b6001600160a01b03811660009081526002602052604081205460ff169003620002eb576001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f12330f5d993a026a582eaf3d6aa6cf59ba0ec304eece453a338ed3292ab0d42f9101620002e2565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200039457600080fd5b919050565b600082601f830112620003ab57600080fd5b815160206001600160401b0380831115620003ca57620003ca62000366565b8260051b604051601f19603f83011681018181108482111715620003f257620003f262000366565b6040529384528581018301938381019250878511156200041157600080fd5b83870191505b848210156200043b576200042b826200037c565b8352918301919083019062000417565b979650505050505050565b600080604083850312156200045a57600080fd5b82516001600160401b03808211156200047257600080fd5b620004808683870162000399565b935060208501519150808211156200049757600080fd5b50620004a68582860162000399565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004e757634e487b7160e01b600052601160045260246000fd5b5060010190565b610f8380620004fe6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806343f30b29116100815780638da5cb5b1161005b5780638da5cb5b14610205578063cba68ed814610216578063f2fde38b1461022957600080fd5b806343f30b2914610192578063715018a6146101d15780637a5004d9146101d957600080fd5b8063395c0fda116100b2578063395c0fda146101095780633a8daded146101345780633f293cc21461016957600080fd5b80631ad0cdb5146100ce578063368a0b18146100f4575b600080fd5b6100e16100dc366004610bbc565b61023c565b6040519081526020015b60405180910390f35b610107610102366004610cc7565b610510565b005b61011c610117366004610d2b565b610526565b6040516001600160a01b0390911681526020016100eb565b610157610142366004610d2b565b60026020526000908152604090205460ff1681565b60405160ff90911681526020016100eb565b61011c610177366004610d2b565b6003602052600090815260409020546001600160a01b031681565b6101c16101a0366004610d2b565b6001600160a01b031660009081526002602052604090205460ff1660011490565b60405190151581526020016100eb565b610107610592565b61011c6101e7366004610d2b565b6001600160a01b039081166000908152600360205260409020541690565b6001546001600160a01b031661011c565b6100e1610224366004610d48565b6105a6565b610107610237366004610d2b565b6106d9565b60008084116102b85760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201527f4e5055545f414d4f554e5400000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190610dce565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000821180156103525750600081115b6103c45760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f495155494449545900000000000000000000000000000000000000000000000060648201526084016102af565b6000806000866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610e1e565b9050806001600160a01b03168a6001600160a01b031603610451578492508391506104bd565b806001600160a01b0316886001600160a01b031603610475578392508491506104bd565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f742076616c69642066726f6d2d746f20746f6b656e20706169720000000060448201526064016102af565b60006104cb8a6103e5610769565b905060006104d98285610769565b905060006104f3836104ed886103e8610769565b906107e8565b90506104ff8183610e51565b9d9c50505050505050505050505050565b610518610847565b61052282826108a1565b5050565b6000816001600160a01b031663c45a01556040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610e1e565b92915050565b61059a610847565b6105a46000610a3c565b565b60006105b48686868661023c565b9050600080846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190610e1e565b6001600160a01b0316886001600160a01b03161461063b5782600061063f565b6000835b604080516000815260208101918290527f022c0d9f0000000000000000000000000000000000000000000000000000000090915291935091506001600160a01b0386169063022c0d9f9061069c9085908590899060248101610e73565b600060405180830381600087803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50505050505095945050505050565b6106e1610847565b6001600160a01b03811661075d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102af565b61076681610a3c565b50565b60008260000361077b5750600061058c565b60006107878385610ee7565b9050826107948583610e51565b146107e15760405162461bcd60e51b815260206004820152600960248201527f4d554c5f4552524f52000000000000000000000000000000000000000000000060448201526064016102af565b9392505050565b6000806107f58385610f06565b9050838110156107e15760405162461bcd60e51b815260206004820152600960248201527f4144445f4552524f52000000000000000000000000000000000000000000000060448201526064016102af565b6001546001600160a01b031633146105a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b60005b8151811015610a375760006001600160a01b03168282815181106108ca576108ca610f1e565b60200260200101516001600160a01b031603610907576109028282815181106108f5576108f5610f1e565b6020026020010151610aa6565b610929565b61092982828151811061091c5761091c610f1e565b6020026020010151610b21565b81818151811061093b5761093b610f1e565b60200260200101516003600085848151811061095957610959610f1e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055507fd8d262969076702e5547563df196d404bfce804cda75b127297b4fd27bb1bf458382815181106109d8576109d8610f1e565b60200260200101518383815181106109f2576109f2610f1e565b6020026020010151604051610a1d9291906001600160a01b0392831681529116602082015260400190565b60405180910390a180610a2f81610f34565b9150506108a4565b505050565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811660009081526002602052604090205460ff16600103610766576001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527f84333c02f52801cb6b335fef47a4230820c52891631eb98fd13af7700968ef7091015b60405180910390a150565b6001600160a01b03811660009081526002602052604081205460ff169003610766576001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f12330f5d993a026a582eaf3d6aa6cf59ba0ec304eece453a338ed3292ab0d42f9101610b16565b6001600160a01b038116811461076657600080fd5b8035610bb781610b97565b919050565b60008060008060808587031215610bd257600080fd5b8435610bdd81610b97565b9350602085013592506040850135610bf481610b97565b91506060850135610c0481610b97565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c3657600080fd5b8135602067ffffffffffffffff80831115610c5357610c53610c0f565b8260051b604051601f19603f83011681018181108482111715610c7857610c78610c0f565b604052938452858101830193838101925087851115610c9657600080fd5b83870191505b84821015610cbc57610cad82610bac565b83529183019190830190610c9c565b979650505050505050565b60008060408385031215610cda57600080fd5b823567ffffffffffffffff80821115610cf257600080fd5b610cfe86838701610c25565b93506020850135915080821115610d1457600080fd5b50610d2185828601610c25565b9150509250929050565b600060208284031215610d3d57600080fd5b81356107e181610b97565b600080600080600060a08688031215610d6057600080fd5b8535610d6b81610b97565b9450602086013593506040860135610d8281610b97565b92506060860135610d9281610b97565b91506080860135610da281610b97565b809150509295509295909350565b80516dffffffffffffffffffffffffffff81168114610bb757600080fd5b600080600060608486031215610de357600080fd5b610dec84610db0565b9250610dfa60208501610db0565b9150604084015163ffffffff81168114610e1357600080fd5b809150509250925092565b600060208284031215610e3057600080fd5b81516107e181610b97565b634e487b7160e01b600052601160045260246000fd5b600082610e6e57634e487b7160e01b600052601260045260246000fd5b500490565b8481526000602085818401526001600160a01b038516604084015260806060840152835180608085015260005b81811015610ebc5785810183015185820160a001528201610ea0565b81811115610ece57600060a083870101525b50601f01601f19169290920160a0019695505050505050565b6000816000190483118215151615610f0157610f01610e3b565b500290565b60008219821115610f1957610f19610e3b565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610f4657610f46610e3b565b506001019056fea26469706673582212201238f2d217de90eb3c04517193f29164fba7d597baf54d3ffecb5f372cfadc9164736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c806343f30b29116100815780638da5cb5b1161005b5780638da5cb5b14610205578063cba68ed814610216578063f2fde38b1461022957600080fd5b806343f30b2914610192578063715018a6146101d15780637a5004d9146101d957600080fd5b8063395c0fda116100b2578063395c0fda146101095780633a8daded146101345780633f293cc21461016957600080fd5b80631ad0cdb5146100ce578063368a0b18146100f4575b600080fd5b6100e16100dc366004610bbc565b61023c565b6040519081526020015b60405180910390f35b610107610102366004610cc7565b610510565b005b61011c610117366004610d2b565b610526565b6040516001600160a01b0390911681526020016100eb565b610157610142366004610d2b565b60026020526000908152604090205460ff1681565b60405160ff90911681526020016100eb565b61011c610177366004610d2b565b6003602052600090815260409020546001600160a01b031681565b6101c16101a0366004610d2b565b6001600160a01b031660009081526002602052604090205460ff1660011490565b60405190151581526020016100eb565b610107610592565b61011c6101e7366004610d2b565b6001600160a01b039081166000908152600360205260409020541690565b6001546001600160a01b031661011c565b6100e1610224366004610d48565b6105a6565b610107610237366004610d2b565b6106d9565b60008084116102b85760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201527f4e5055545f414d4f554e5400000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190610dce565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000821180156103525750600081115b6103c45760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f495155494449545900000000000000000000000000000000000000000000000060648201526084016102af565b6000806000866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610e1e565b9050806001600160a01b03168a6001600160a01b031603610451578492508391506104bd565b806001600160a01b0316886001600160a01b031603610475578392508491506104bd565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f742076616c69642066726f6d2d746f20746f6b656e20706169720000000060448201526064016102af565b60006104cb8a6103e5610769565b905060006104d98285610769565b905060006104f3836104ed886103e8610769565b906107e8565b90506104ff8183610e51565b9d9c50505050505050505050505050565b610518610847565b61052282826108a1565b5050565b6000816001600160a01b031663c45a01556040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610e1e565b92915050565b61059a610847565b6105a46000610a3c565b565b60006105b48686868661023c565b9050600080846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190610e1e565b6001600160a01b0316886001600160a01b03161461063b5782600061063f565b6000835b604080516000815260208101918290527f022c0d9f0000000000000000000000000000000000000000000000000000000090915291935091506001600160a01b0386169063022c0d9f9061069c9085908590899060248101610e73565b600060405180830381600087803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50505050505095945050505050565b6106e1610847565b6001600160a01b03811661075d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102af565b61076681610a3c565b50565b60008260000361077b5750600061058c565b60006107878385610ee7565b9050826107948583610e51565b146107e15760405162461bcd60e51b815260206004820152600960248201527f4d554c5f4552524f52000000000000000000000000000000000000000000000060448201526064016102af565b9392505050565b6000806107f58385610f06565b9050838110156107e15760405162461bcd60e51b815260206004820152600960248201527f4144445f4552524f52000000000000000000000000000000000000000000000060448201526064016102af565b6001546001600160a01b031633146105a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b60005b8151811015610a375760006001600160a01b03168282815181106108ca576108ca610f1e565b60200260200101516001600160a01b031603610907576109028282815181106108f5576108f5610f1e565b6020026020010151610aa6565b610929565b61092982828151811061091c5761091c610f1e565b6020026020010151610b21565b81818151811061093b5761093b610f1e565b60200260200101516003600085848151811061095957610959610f1e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055507fd8d262969076702e5547563df196d404bfce804cda75b127297b4fd27bb1bf458382815181106109d8576109d8610f1e565b60200260200101518383815181106109f2576109f2610f1e565b6020026020010151604051610a1d9291906001600160a01b0392831681529116602082015260400190565b60405180910390a180610a2f81610f34565b9150506108a4565b505050565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811660009081526002602052604090205460ff16600103610766576001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527f84333c02f52801cb6b335fef47a4230820c52891631eb98fd13af7700968ef7091015b60405180910390a150565b6001600160a01b03811660009081526002602052604081205460ff169003610766576001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f12330f5d993a026a582eaf3d6aa6cf59ba0ec304eece453a338ed3292ab0d42f9101610b16565b6001600160a01b038116811461076657600080fd5b8035610bb781610b97565b919050565b60008060008060808587031215610bd257600080fd5b8435610bdd81610b97565b9350602085013592506040850135610bf481610b97565b91506060850135610c0481610b97565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c3657600080fd5b8135602067ffffffffffffffff80831115610c5357610c53610c0f565b8260051b604051601f19603f83011681018181108482111715610c7857610c78610c0f565b604052938452858101830193838101925087851115610c9657600080fd5b83870191505b84821015610cbc57610cad82610bac565b83529183019190830190610c9c565b979650505050505050565b60008060408385031215610cda57600080fd5b823567ffffffffffffffff80821115610cf257600080fd5b610cfe86838701610c25565b93506020850135915080821115610d1457600080fd5b50610d2185828601610c25565b9150509250929050565b600060208284031215610d3d57600080fd5b81356107e181610b97565b600080600080600060a08688031215610d6057600080fd5b8535610d6b81610b97565b9450602086013593506040860135610d8281610b97565b92506060860135610d9281610b97565b91506080860135610da281610b97565b809150509295509295909350565b80516dffffffffffffffffffffffffffff81168114610bb757600080fd5b600080600060608486031215610de357600080fd5b610dec84610db0565b9250610dfa60208501610db0565b9150604084015163ffffffff81168114610e1357600080fd5b809150509250925092565b600060208284031215610e3057600080fd5b81516107e181610b97565b634e487b7160e01b600052601160045260246000fd5b600082610e6e57634e487b7160e01b600052601260045260246000fd5b500490565b8481526000602085818401526001600160a01b038516604084015260806060840152835180608085015260005b81811015610ebc5785810183015185820160a001528201610ea0565b81811115610ece57600060a083870101525b50601f01601f19169290920160a0019695505050505050565b6000816000190483118215151615610f0157610f01610e3b565b500290565b60008219821115610f1957610f19610e3b565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610f4657610f46610e3b565b506001019056fea26469706673582212201238f2d217de90eb3c04517193f29164fba7d597baf54d3ffecb5f372cfadc9164736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 126,
        "contract": "contracts/SmartRoute/adapter/UniAdapter.sol:UniAdapter",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/SmartRoute/adapter/UniAdapter.sol:UniAdapter",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2890,
        "contract": "contracts/SmartRoute/adapter/UniAdapter.sol:UniAdapter",
        "label": "isMatic",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint8)"
      },
      {
        "astId": 2894,
        "contract": "contracts/SmartRoute/adapter/UniAdapter.sol:UniAdapter",
        "label": "factoryToWMatic",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint8)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}