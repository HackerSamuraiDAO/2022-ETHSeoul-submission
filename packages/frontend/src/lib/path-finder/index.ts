import { PathFinderInput, PathFinderOutput } from "../../type/path-finder";

export const getFromPathFinder = async (param: PathFinderInput): Promise<PathFinderOutput> => {
  console.log("getFromPathFinder param:", param);
  const output = {
    metamaskSwapTransaction: {
      from: "0x64478fc1bc6726caf1d0366dc61ef44e7bd3c1bc",
      to: "0xaD2E4c8d566b1D76a378e8bAb234e15FD219aFE6",
      value: "1000000000000000000",
      data: "0x4245a44900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000001ba64dbc14e5f4e894ea2d97018a769fdb15f66400000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000009a000000000000000000000000000000000000000000000020c6cac7d2b798279840000000000000000000000000000000000000000000000000000018bcfe5680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000001ba64dbc14e5f4e894ea2d97018a769fdb15f66400000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009c3c9283d3e44854697cd22d3faa240cfb03288900000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d29d223f41d97496baed0df42583ab2a183664cc000000000000000000000000000000000000000000000000000000000000000100000000000000000000000056d3792b932a1111a7f8f4ed409347e3a0bffcda0000000000000000000000009c3c9283d3e44854697cd22d3faa240cfb03288900000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ba64dbc14e5f4e894ea2d97018a769fdb15f66400000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d29d223f41d97496baed0df42583ab2a183664cc0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000c73f4dd5ebdc34fc80cc6de4658dfe675dd7325c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009c3c9283d3e44854697cd22d3faa240cfb03288900000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d29d223f41d97496baed0df42583ab2a183664cc000000000000000000000000000000000000000000000000000000000000000100000000000000000000000056d3792b932a1111a7f8f4ed409347e3a0bffcda0000000000000000000000009c3c9283d3e44854697cd22d3faa240cfb03288900000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ba64dbc14e5f4e894ea2d97018a769fdb15f66400000000000000000000000064478fc1bc6726caf1d0366dc61ef44e7bd3c1bc00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d29d223f41d97496baed0df42583ab2a183664cc0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000c73f4dd5ebdc34fc80cc6de4658dfe675dd7325c0000000000000000000000000000000000000000000000000000000000000000",
      gas: "3000000",
      maxFeePerGas: "0",
      maxPriorityFeePerGas: "0",
      type: "2",
    },
    expectedAmountOut: "97030337674037970",
  };
  console.log("getFromPathFinder output:", output);
  return output;
};
